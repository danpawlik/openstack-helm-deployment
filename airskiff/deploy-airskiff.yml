
---
- name: Create servers
  hosts: localhost
  gather_facts: False
  vars:
    flavor: b2-60
    image: "Ubuntu 16.04"
    key_name: ansible_key
    net_name: Ext-Net
  tags:
    - create_servers
  tasks:
    - name: Set OS configuration as fact
      set_fact:
        flavor: "{{ flavor }}"
        image: "{{ image }}"
        key_name: "{{ key_name }}"
        net_name: "{{ net_name }}"
    - name: "Spawning airskiff node"
      os_server:
        state: present
        auth:
          auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
          username: "{{ lookup('env', 'OS_USERNAME') }}"
          password: "{{ lookup('env', 'OS_PASSWORD') }}"
          project_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
          user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
          project_domain_name: "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
        region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"
        image: "{{ image }}"
        key_name: "{{ key_name }}"
        timeout: 200
        flavor: "{{ flavor }}"
        nics:
          - net-name: "{{ net_name }}"
        name: "{{ item }}"
      register: airskiff_result
      with_items:
        - "airskiff-test"

    - name: test
      debug:
        var: airskiff_result

    - name: Add airskiff into local inventory
      add_host:
        name: "{{ airskiff_result.results[0].openstack.public_v4  }}"
        hostname: "{{ airskiff_result.results[0].openstack.name }}"
        group: airskiff

    - name: wait for instances k8s_contr to be ready
      wait_for:
        port: 22
        delay: 5
        timeout: 150
        host: "{{ item }}"
      with_items: "{{ groups['airskiff'] }}"
      run_once: true

    - name: Add airskiff host key to known_hosts
      shell: ssh-keyscan -H "{{ item }}" >> /home/ubuntu/.ssh/known_hosts
      with_items: "{{ groups['airskiff'] }}"
      args:
        executable: /bin/bash
      run_once: True


- name: Deploy
  hosts:
    - airskiff
  gather_facts: False
  vars:
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: /home/ubuntu/.ssh/id_rsa_ansible
  tags:
    - deplot
  tasks:
    - name: "Copy upgrade script"
      copy:
        src: /home/ubuntu/openstack-helm-deployment/scripts/upgrade-host.sh
        dest: /home/ubuntu/
        mode: 0755
        group: ubuntu
        owner: ubuntu

    - name: "Change sudoers"
      copy:
        src: /home/ubuntu/openstack-helm-deployment/airskiff/change-sudoers.sh
        dest: /home/ubuntu/
        mode: 0755
        group: ubuntu
        owner: ubuntu

    - name: check if sudoers is correct
      sudo: yes
      sudo_user: root
      shell: /bin/grep -q 'ubuntu' /etc/sudoers
      register: sudoers_result
      ignore_errors: true

    - when: sudoers_result.rc == 1
      sudo: yes
      sudo_user: ubuntu
      shell: sudo bash /home/ubuntu/change-sudoers.sh
      register: ubuntu_sudoers
      ignore_errors: true

    - name: remove nano
      sudo: yes
      sudo_user: ubuntu
      shell: /usr/bin/sudo /usr/bin/apt remove -y nano
      ignore_errors: true

    - name: Upgrade host
      sudo: yes
      sudo_user: ubuntu
      shell: /bin/bash /home/ubuntu/upgrade-host.sh >> /home/ubuntu/logs
      register: upgrade_status
      ignore_errors: yes
      run_once: True

    - name: Clone repo
      shell: |
        /usr/bin/git clone https://opendev.org/airship/treasuremap.git /home/ubuntu/treasuremap >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: True


    #############################################333
      # change versions.yaml to new one https://review.opendev.org/#/c/664469

    - name: "New project versions"
      shell: |
        cd /home/ubuntu/treasuremap &&
        git fetch https://review.opendev.org/airship/treasuremap refs/changes/69/664469/24 && git checkout FETCH_HEAD

    ##################################################

    - name: 000-install-packages.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/000-install-packages.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: True

    - name: 005-clone-dependencies.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/005-clone-dependencies.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: 010-deploy-k8s.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/010-deploy-k8s.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true


    #############################################333

    - name: "Copy new charts - more pods for main services + increase timeouts"
      copy:
        src: /home/ubuntu/openstack-helm-deployment/airskiff/charts
        dest: /home/ubuntu/treasuremap/site/airskiff/software/
        mode: 0644
        group: ubuntu
        owner: ubuntu

    ##################################################

    - name: 020-setup-client.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo  ./tools/deployment/airskiff/developer/020-setup-client.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: 030-armada-bootstrap.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo ./tools/deployment/airskiff/developer/030-armada-bootstrap.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: 100-deploy-osh.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo  ./tools/deployment/airskiff/developer/100-deploy-osh.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: add bash completion
      shell: |
        echo "source <(kubectl completion bash)" >> /home/ubuntu/.bashrc
        echo "alias k=kubectl" >> /home/ubuntu/.bashrc
        echo "complete -F __start_kubectl k" >> /home/ubuntu/.bashrc
      ignore_errors: yes
      run_once: true
