---
- name: Create servers
  hosts: localhost
  gather_facts: False
  vars:
    flavor: b2-30
    image: "Ubuntu 16.04"
    key_name: ansible_key
    net_name: Ext-Net
  tags:
    - create_servers
  tasks:
    - name: Set OS configuration as fact
      set_fact:
        flavor: "{{ flavor }}"
        image: "{{ image }}"
        key_name: "{{ key_name }}"
        net_name: "{{ net_name }}"
    - name: "Spawning airskiff node"
      os_server:
        state: present
        auth:
          auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
          username: "{{ lookup('env', 'OS_USERNAME') }}"
          password: "{{ lookup('env', 'OS_PASSWORD') }}"
          project_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
          user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
          project_domain_name: "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
        region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"
        image: "{{ image }}"
        key_name: "{{ key_name }}"
        timeout: 200
        flavor: "{{ flavor }}"
        nics:
          - net-name: "{{ net_name }}"
        name: "{{ item }}"
      register: airskiff_result
      with_items:
        - "airskiff-test"

    - name: test
      debug:
        var: airskiff_result

    - name: Add airskiff into local inventory
      add_host:
        name: "{{ airskiff_result.results[0].openstack.public_v4  }}"
        hostname: "{{ airskiff_result.results[0].openstack.name }}"
        group: airskiff

    - name: wait for instances k8s_contr to be ready
      wait_for:
        port: 22
        delay: 5
        timeout: 150
        host: "{{ item }}"
      with_items: "{{ groups['airskiff'] }}"
      run_once: true

    - name: Add airskiff host key to known_hosts
      shell: ssh-keyscan -H "{{ item }}" >> /home/ubuntu/.ssh/known_hosts
      with_items: "{{ groups['airskiff'] }}"
      args:
        executable: /bin/bash
      run_once: True


- name: Deploy
  hosts:
    - airskiff
  gather_facts: False
  vars:
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: /home/ubuntu/.ssh/id_rsa_ansible
  tags:
    - deploy
  tasks:
    - name: "Copy upgrade script"
      copy:
        src: /home/ubuntu/openstack-helm-deployment/scripts/upgrade-host.sh
        dest: /home/ubuntu/
        mode: 0755
        group: ubuntu
        owner: ubuntu

    - name: "Change sudoers"
      copy:
        src: /home/ubuntu/openstack-helm-deployment/airskiff/change-sudoers.sh
        dest: /home/ubuntu/
        mode: 0755
        group: ubuntu
        owner: ubuntu

    - name: check if sudoers is correct
      sudo: yes
      sudo_user: root
      shell: /bin/grep -q 'ubuntu' /etc/sudoers
      register: sudoers_result
      ignore_errors: true

    - when: sudoers_result.rc == 1
      sudo: yes
      sudo_user: ubuntu
      shell: sudo bash /home/ubuntu/change-sudoers.sh
      register: ubuntu_sudoers
      ignore_errors: true

    - name: remove nano
      sudo: yes
      sudo_user: ubuntu
      shell: /usr/bin/sudo /usr/bin/apt remove -y nano
      ignore_errors: true

    - name: Upgrade host
      sudo: yes
      sudo_user: ubuntu
      shell: |
        /bin/bash /home/ubuntu/upgrade-host.sh >> /home/ubuntu/logs
      register: upgrade_status
      ignore_errors: yes
      run_once: True

    - name: install other packages
      sudo: yes
      sudo_user: ubuntu
      shell: /usr/bin/sudo /usr/bin/apt install -y vim htop ccze
      ignore_errors: true

    #################################################################
    #
    ####################### RAMDISK #################################
    #
    #################################################################

    - name: install other packages
      sudo: yes
      sudo_user: ubuntu
      shell: |
        sudo mkdir -p /data
        sudo mount -t tmpfs -o nodev,nosuid,size=512M tmpfs /data
      ignore_errors: true

    - name: Clone repo
      shell: |
        /usr/bin/git clone https://opendev.org/airship/treasuremap.git /home/ubuntu/treasuremap >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: True

    - name: 000-install-packages.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/000-install-packages.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: True

    - name: 005-clone-dependencies.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/005-clone-dependencies.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: Remove docker.io name
      shell: |
          find /home/ubuntu -type f -exec sed -i -e 's/docker.io=18.06.1-0ubuntu1.2~16.04.1/docker.io/g' {} \;
      ignore_errors: yes
      run_once: true


    ################################################
    # WORKAROUND #
    - name: Change bad image
      shell: |
          #find /home/ubuntu -type f -exec sed -i -e 's/e79672987e646957aa937242592e0918c2829934/6c07c70decb48bf7ca902ed802991a754b1cc592/g' {} \;
          #
          #
          find /home/ubuntu -type f -exec sed -i -e 's/e79672987e646957aa937242592e0918c2829934/2765415d82b2be3fdac275a959ee4f3b173a2566/g' {} \;
          find /home/ubuntu -type f -exec sed -i -e 's/b5432ea39423a14ab41f218cb23301aeb3b1500d/caa75e403e1c6a671e65fe68c167ba0e9638f51e/g' {} \;
          find /home/ubuntu -type f -exec sed -i -e 's/a2b296460886035a0db3a75a520caf405c8862e8/971c901c4da36e3e31be58d4be8b0e194e715d8f/g' {} \;
          find /home/ubuntu -type f -exec sed -i -e 's/da4bdf535a56583f2e1340776461fe405c01db56/b417f422e9cd2a921646ee0af4a05fc4e211beab/g' {} \;
          find /home/ubuntu -type f -exec sed -i -e 's/aeb0c198b196dbc69190299fe98df4137faf0333/9bf298fea7fe111f6807a2e6276f35289d2fd83c/g' {} \;
          find /home/ubuntu -type f -exec sed -i -e 's/aeb0c198b196dbc69190299fe98df4137faf0333/9bf298fea7fe111f6807a2e6276f35289d2fd83c/g' {} \;
      ignore_errors: yes
      run_once: true

    ################################################

    - name: 010-deploy-k8s.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/010-deploy-k8s.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: 020-setup-client.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo  ./tools/deployment/airskiff/developer/020-setup-client.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: change ownership of airskiff.yaml
      shell: |
        if [ ! -f /home/ubuntu/treasuremap/airskiff.yaml ]; then
          touch /home/ubuntu/treasuremap/airskiff.yaml
        fi
        sudo chmod 0644 /home/ubuntu/treasuremap/airskiff.yaml
      ignore_errors: true

    - name: 030-armada-bootstrap.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo ./tools/deployment/airskiff/developer/030-armada-bootstrap.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

#    ########################################################
#    # WORKAROUND #
#
#    - name: Increase timeout
#      shell: |
#        kubectl get deployment -n ucp -o yaml | sed 's/timeoutSeconds: 1/timeoutSeconds: 30/g' | sed 's/periodSeconds: [0-9][0-9]/periodSeconds: 60/g' | kubectl apply -f -
#      ignore_errors: yes
#      run_once: true
#
#    #######################################################

    - name: 100-deploy-osh.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo  ./tools/deployment/airskiff/developer/100-deploy-osh.sh >> /home/ubuntu/logs 2>&1
      ignore_errors: yes
      run_once: true

    - name: add bash completion
      shell: |
        echo "source <(kubectl completion bash)" >> /home/ubuntu/.bashrc
        echo "alias k=kubectl" >> /home/ubuntu/.bashrc
        echo "complete -F __start_kubectl k" >> /home/ubuntu/.bashrc
      ignore_errors: yes
      run_once: true
