
---
- name: Create servers
  hosts: localhost
  gather_facts: False
  tags:
    - create_servers
  tasks:
    - name: "Spawning airskiff node"
      os_server:
        state: present
        auth:
          auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
          username: "{{ lookup('env', 'OS_USERNAME') }}"
          password: "{{ lookup('env', 'OS_PASSWORD') }}"
          project_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
          user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
          project_domain_name: "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
        region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"
        image: "Ubuntu 16.04"
        key_name: ansible_key
        timeout: 200
        flavor: c2-30
        nics:
          - net-name: Ext-Net
        name: "{{ item }}"
      register: airskiff_result
      with_items:
        - "airskiff-test"

    - name: test
      debug:
        var: airskiff_result

    - name: Add airskiff into local inventory
      add_host:
        name: "{{ airskiff_result.results[0].openstack.public_v4  }}"
        hostname: "{{ airskiff_result.results[0].openstack.name }}"
        group: airskiff

    - name: wait for instances k8s_contr to be ready
      wait_for:
        port: 22
        delay: 5
        timeout: 150
        host: "{{ item }}"
      with_items: "{{ groups['airskiff'] }}"
      run_once: true

    - name: Add airskiff host key to known_hosts
      shell: ssh-keyscan -H "{{ item }}" >> /home/ubuntu/.ssh/known_hosts
      with_items: "{{ groups['airskiff'] }}"
      args:
        executable: /bin/bash
      run_once: True


- name: Deploy
  hosts:
    - airskiff
  gather_facts: False
  vars:
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: /home/ubuntu/.ssh/id_rsa_ansible
  tags:
    - deplot
  tasks:
    # https://airship-treasuremap.readthedocs.io/en/latest/airskiff.html
    - name: Change sudoers
      sudo: yes
      sudo_user: ubuntu
      shell: |
        /bin/echo "ubuntu  ALL=(ALL) NOPASSWD: ALL" | /usr/bin/sudo tee -a /etc/sudoers && \
        /usr/bin/sudo /bin/cat /etc/sudoers | /bin/sed "/^root/d" | /usr/bin/sudo tee /etc/sudoers && \
        /bin/echo "root  ALL=(ALL) NOPASSWD: ALL" | /usr/bin/sudo tee -a /etc/sudoers
      register: ubuntu_sudoers
      ignore_errors: true

    - name: check if sudoers is correct
      sudo: yes
      sudo_user: root
      shell: /bin/grep -q 'ubuntu' /etc/sudoers
      register: sudoers_result
      ignore_errors: true

    - when: sudoers_result.rc == 1
      fail:
        msg: |
            Please add into sudoers this lines:
            "root ALL=(ALL) NOPASSWD: ALL"
            "ubuntu ALL=(ALL) NOPASSWD: ALL"

    - name: "Copy upgrade script"
      copy:
        src: /home/ubuntu/openstack-helm-deployment/multinode_v2/scripts/upgrade-host.sh
        dest: /home/ubuntu/
        mode: 0755
        group: ubuntu
        owner: ubuntu

    - name: remove nano
      sudo: yes
      sudo_user: ubuntu
      shell: /usr/bin/sudo /usr/bin/apt remove -y nano
      ignore_errors: true

    - name: Upgrade host
      sudo: yes
      sudo_user: ubuntu
      shell: /bin/ /home/ubuntu/upgrade-host.sh >> /home/ubuntu/logs
      register: upgrade_status
      ignore_errors: yes
      run_once: True

    - name: Clone repo
      shell: |
        /usr/bin/git clone https://opendev.org/airship/treasuremap.git /home/ubuntu/treasuremap | tee -a /home/ubuntu/logs
      ignore_errors: yes
      run_once: True

      #    - name: Change commit ID for airskiff
      #      shell: /bin/sed -i "s/6d0a9c21b0455e9d674d525c5e0cd0d5d53f0f85/d5655e95ea5043e5330f0a56fbed5ecf19e52808/g" /home/ubuntu/treasuremap/tools/deployment/airskiff/developer/005-clone-dependencies.sh
      #      ignore_errors: yes
      #      run_once: True


    - name: 000-install-packages.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/000-install-packages.sh | tee -a /home/ubuntu/logs
      ignore_errors: yes
      run_once: True

    - name: 005-clone-dependencies.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/005-clone-dependencies.sh | tee -a /home/ubuntu/logs
      ignore_errors: yes
      run_once: true

    - name: 010-deploy-k8s.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
         ./tools/deployment/airskiff/developer/010-deploy-k8s.sh | tee -a /home/ubuntu/logs
      ignore_errors: yes
      run_once: true

    - name: 020-setup-client.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo  ./tools/deployment/airskiff/developer/020-setup-client.sh | tee -a /home/ubuntu/logs
      ignore_errors: yes
      run_once: true

    - name: 030-armada-bootstrap.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo ./tools/deployment/airskiff/developer/030-armada-bootstrap.sh | tee -a /home/ubuntu/logs
      ignore_errors: yes
      run_once: true

    - name: 100-deploy-osh.sh
      shell: |
        cd /home/ubuntu/treasuremap && \
        sudo  ./tools/deployment/airskiff/developer/100-deploy-osh.sh | tee -a /home/ubuntu/logs
      ignore_errors: yes
      run_once: true
