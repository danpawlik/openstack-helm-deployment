---
- name: Prepare hosts
  hosts:
    - k8s_contr
    - k8s_minion
  gather_facts: False
  remote_user: ubuntu
  become: True
  vars:
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: /home/ubuntu/.ssh/id_rsa_ansible
  tasks:
      # temporary workaround
    - name: Check if openrc file exist
      stat:
        path: /home/ubuntu/openrc
      register: openrc_file

    - when: openrc_file.stat.exists == True
      name: Run setup-client and ingress on k8s_contr
      become: true
      become_user: ubuntu
      shell: |
          set timeout 300
          cd /opt/openstack-helm
          nohup ./tools/deployment/multinode/010-setup-client.sh &
          nohup ./tools/deployment/multinode/020-ingress.sh &
          wait
      delegate_to: "{{ k8s_contr }}"
      ignore_errors: yes
      register: client_setup
      run_once: True

    - when: (client_setup | success)
      name: Run Ceph on k8s_contr
      become: true
      become_user: ubuntu
      shell: |
          set timeout 500
          cd /opt/openstack-helm
          nohup ./tools/deployment/multinode/030-ceph.sh &
          wait
      delegate_to: "{{ k8s_contr }}"
      ignore_errors: yes
      register: ceph_result
      run_once: True

    - when: (ceph_result | success)
      name: Run Ceph-NS-Activate on k8s_contr
      become: true
      become_user: ubuntu
      shell: |
          set timeout 500
          cd /opt/openstack-helm
          nohup ./tools/deployment/multinode/040-ceph-ns-activate.sh &
          wait
      delegate_to: "{{ k8s_contr }}"
      ignore_errors: yes
      register: ceph_ns_activate_result
      run_once: True

    - when: (ceph_ns_activate_result | success)
      name: Run mariaDB rabbitMQ memcached on k8s_contr
      become: true
      become_user: ubuntu
      shell: |
        set timeout 300
        cd /opt/openstack-helm
        nohup ./tools/deployment/multinode/050-mariadb.sh &
        nohup ./tools/deployment/multinode/060-rabbitmq.sh &
        nohup ./tools/deployment/multinode/070-memcached.sh &
        wait
      delegate_to: "{{ k8s_contr }}"
      ignore_errors: yes
      register: basic_services_result
      run_once: True

    ###########################################################################
    - when: "{{ lookup('env', 'OS_DEPLOY_ALL') | default(false) | bool }}"
      name: Run Keystone, RadosGW, Cinder, Glance, Heat, Barbican and tempest on k8s_contr
      become: true
      become_user: ubuntu
      shell: |
        set timeout 300
        cd /opt/openstack-helm
        export GLANCE_BACKEND=rbd
        nohup ./tools/deployment/multinode/080-keystone.sh &
        nohup ./tools/deployment/multinode/090-ceph-radosgateway.sh &
        nohup ./tools/deployment/multinode/100-glance.sh &
        nohup ./tools/deployment/multinode/110-cinder.sh &
        nohup ./tools/deployment/multinode/140-compute-kit.sh &
        nohup ./tools/deployment/multinode/150-heat.sh &
        nohup ./tools/deployment/multinode/160-barbican.sh &
        nohup ./tools/deployment/multinode/900-tempest.sh &
        wait
      delegate_to: "{{ k8s_contr }}"
      ignore_errors: yes
      register: os_services_result
      run_once: True

    - when: "{{ lookup('env', 'OS_DEPLOY_ALL') | default(false) | bool }} and (os_services_result | success)"
      name: Configure minions to use OVS and libvirt
      become: true
      become_user: ubuntu
      shell: |
        set timeout 300
        cd /opt/openstack-helm
        nohup ./tools/deployment/multinode/120-openvswitch.sh &
        nohup ./tools/deployment/multinode/130-libvirt.sh &
        wait
      delegate_to: "{{ k8s_contr }}"
      ignore_errors: yes
      register: os_compute_result
      run_once: True
