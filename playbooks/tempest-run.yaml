---
- name:
  hosts: localhost
  tasks:
    - name: Set k8s_hosts as fact
      set_fact:
        k8s_hosts:
          k8s_contr:
            - "{{ lookup('env', 'CONTR_NAME') if lookup('env', 'CONTR_NAME') != '' else 'bob_contr' }}"
          k8s_minion:
            # If you need more minion nodes, just add same entry
            - "{{ lookup('env', 'MINION_1_NAME') if lookup('env', 'MINION_1_NAME') != '' else 'stevard_minion'  }}"
            - "{{ lookup('env', 'MINION_2_NAME') if lookup('env', 'MINION_2_NAME') != '' else 'kevin_minion'  }}"
        contr_flavor: b2-60
        contr_image: "Ubuntu 18.04"
        contr_key_name: ansible_key
        contr_net_name: Ext-Net
        minion_flavor: b2-30
        minion_image: "Ubuntu 18.04"
        minion_net_name: Ext-Net
        vrack_net_name: "{{ lookup('env', 'VRACK_NET_NAME') if lookup('env', 'VRACK_NET_NAME') != '' else '' }}"
        openstack_keypair_name: "{{ lookup('env', 'OPENSTACK_KEYPAIR_NAME') if lookup('env', 'OPENSTACK_KEYPAIR_NAME') != '' else 'ansible_key' }}"
        namespace: "{{ lookup('env', 'NAMESPACE') if lookup('env', 'NAMESPACE') != '' else 'testnamespace' }}"

- name: Create servers
  hosts:
    - localhost
  gather_facts: False
  roles:
    - create_servers
  tags:
    - create_servers

- name:
  hosts:
    - localhost
    - k8s_contr
    - k8s_minion
  tasks:
    - name: Set k8s_hosts as fact
      set_fact:
        vrack_interface: "{{ lookup('env', 'VRACK_INTERFACE') if lookup('env', 'VRACK_INTERFACE') != '' else 'ens4'  }}"
        openrc_path: "{{ lookup('env', 'OPENRC_PATH') if lookup('env', 'OPENRC_PATH') != '' else '/home/ubuntu/openrc' }}"

# Copy
- name: Copy required scripts
  hosts:
    - k8s_contr
    - k8s_minion
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - copy_scripts

- name: Bridge network traffic between hosts because we use FLAT network for tempest
  hosts:
    - k8s_contr
    - k8s_minion
  gather_facts: False
  roles:
    - bridge_network

- name: Prepare host to use Openstack Tempest
  hosts:
    - k8s_contr
  gather_facts: False
  remote_user: ubuntu
  become: True
  vars:
    ansible_host_key_checking: false
    whitelist_file: "$HOME/tempest/whitelist.list"
    blacklist_file: "$HOME/tempest/blacklist.list"
    tempest_params: "--concurrency 4"
    tempest_branch: "master"
  roles:
    - tempest
