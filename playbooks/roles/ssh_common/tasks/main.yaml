---
- block:

  - name: Generate temporary ssh key that will be used by contr
    openssh_keypair:
      path: "/tmp/{{ ssh_name }}"
    vars:
      - ssh_name: "ssh-{{ 99999999 | random }}"
    register: ssh_keygen_result

  - name: Install private key on k8s_contr
    copy:
      src: "{{ ssh_keygen_result.filename }}"
      dest: .ssh/id_rsa
      mode: 0600
      group: ubuntu
      owner: ubuntu
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['k8s_contr'] }}"
    ignore_errors: false

  - name: Install public key on all hosts
    copy:
      src: "{{ ssh_keygen_result.filename }}.pub"
      dest: .ssh/id_rsa.pub
      mode: 0600
      group: ubuntu
      owner: ubuntu
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['all'] }}"
    ignore_errors: false

  - when: additional_ssh_key is defined
    copy:
      src: "{{ additional_ssh_key }}"
      dest: .ssh/additional_ssh_key.pub
      mode: 0600
      group: ubuntu
      owner: ubuntu
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['all'] }}"
    ignore_errors: false

  - name: Set permissions to .ssh dir on contr
    shell: sudo chown -R ubuntu:ubuntu -R .ssh
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['k8s_contr'] }}"

  - name: Set permissions to .ssh dir on minions
    shell: chown -R ubuntu:ubuntu -R .ssh
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['k8s_minion'] }}"

  - name: Accept SSH key on all host
    shell: cat .ssh/id_rsa.pub | tee -a .ssh/authorized_keys
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['all'] }}"

  - when: additional_ssh_key is defined
    name: Add additional key to authorized_keys
    shell: cat .ssh/additional_ssh_key.pub | tee -a .ssh/authorized_keys
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['all'] }}"

  - name: Ensure SSH connectivity between k8s_contr and k8s_minion
    shell: |
        for ip in "{{groups['k8s_minion'] | join(' ') }}"; do
          ssh -oBatchMode=yes -i .ssh/id_rsa -oStrictHostKeyChecking=no "ubuntu@${ip}" uptime;
        done
    retries: 5
    delay: 10
    delegate_to: "{{ item }}"
    delegate_facts: True
    loop: "{{ groups['k8s_contr'] }}"
    register: command_result
    failed_when: "command_result.rc == 1"
