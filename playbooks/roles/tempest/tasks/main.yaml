---
- name: Check if openrc file exist
  stat:
    path: openrc
  register: openrc_file

- when:  openrc_file.stat.exists == False
  fail:
    msg: "Could not find openrc file. Can't continue"

- name: Copy tempest conf
  synchronize:
    src: tempest/
    dest: tempest/

- name: Check if trasuremap exists
  stat:
    path: treasuremap
  register: treasuremap_dir

- when: treasuremap_dir.stat.exists and treasuremap_dir.stat.isdir
  name: Check if Airship Shipyard has finished its work
  sudo: yes
  sudo_user: ubuntu
  shell: |
    if [ -d 'treasuremap' ]; then
      bash -x scripts/check-shipyard-actions.sh > tempest-preparation-logs 2>&1
    fi
  ignore_errors: false
  environment:
    ACTION_NAME: ''
    TIMEOUT: 2000

- when: treasuremap_dir.stat.exists
  name: Wait for services to be deployed on airskiff host
  sudo: yes
  sudo_user: ubuntu
  shell: |
    bash -x openstack-helm-infra/tools/deployment/common/wait-for-pods.sh openstack >> tempest-preparation-logs 2>&1
  ignore_errors: false

- when: not treasuremap_dir.stat.exists
  name: Wait for services to be deployed on openstack host
  sudo: yes
  sudo_user: ubuntu
  shell: |
    bash -x /opt/openstack-helm-infra/tools/deployment/common/wait-for-pods.sh openstack >> tempest-preparation-logs 2>&1
  ignore_errors: false

- name: Check services replication
  sudo: yes
  sudo_user: ubuntu
  shell: |
    bash -x scripts/check-service-replication.sh >> tempest-preparation-logs 2>&1
  environment:
    NAMESPACE: "{{ namespace }}"

- name: Prepare tempest test
  sudo: yes
  sudo_user: ubuntu
  shell: |
    export OPENRC_PATH="$HOME/openrc-{{ namespace }}"
    bash -x scripts/prepare-tempest.sh >> tempest-preparation-logs 2>&1
  register: tempest_output

- name: Execute tempest test
  sudo: yes
  sudo_user: ubuntu
  shell: |
    bash -x scripts/run-tempest.sh > tempest-test-output 2>&1
  register: tempest_output
  environment:
    WHITELIST_FILE: "{{ whitelist_file }}"
    BLACKLIST_FILE: "{{ blacklist_file }}"
    TEMPEST_PARAMS: "{{ tempest_params }}"
    TEMPEST_BRANCH: "{{ tempest_branch }}"

- when: Get tempest_output var
  debug:
    var: tempest_output
