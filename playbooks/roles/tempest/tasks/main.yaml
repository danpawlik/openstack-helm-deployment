---
- name: Push tempest dir to the host
  hosts: localhost
  gather_facts: False
  remote_user: ubuntu
  become: True
  vars:
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: ".ssh/id_rsa_ansible"
  tasks:
    - name: Copy tempest conf
      copy:
        src: "{{ ansible_env.HOME }}/openstack-helm-deployment/playbooks/tempest/tempest/"
        dest: tempest/
        mode: 0755
        group: ubuntu
        owner: ubuntu
      delegate_to: "{{ item }}"
      delegate_facts: True
      loop: "{{ groups['k8s_contr'] }}"

- name: Prepare host to use Openstack Tempest
  hosts:
    - k8s_contr
  gather_facts: False
  remote_user: ubuntu
  become: True
  vars:
    ansible_host_key_checking: false
    ansible_ssh_private_key_file: ".ssh/id_rsa_ansible"
    home_dir: "{{ lookup('env','HOME') }}"
  tasks:
    - name: Check if openrc file exist
      stat:
        path: openrc
      register: openrc_file

    - name: Check if Airship Shipyard has finished its work
      sudo: yes
      sudo_user: ubuntu
      shell: |
        if [ -d "{{ home_dir }}/treasuremap" ]; then
          bash -x "{{ home_dir }}/tempest/check-shipyard-actions.sh" >> "{{ home_dir }}/tempest/tempest-logs" 2>&1
        fi
      ignore_errors: false
      environment:
        ACTION_NAME: ''
        TIMEOUT: 1500

    - name: Wait for services to be deployed
      sudo: yes
      sudo_user: ubuntu
      shell: |
        bash -x "{{ home_dir }}/openstack-helm-infra/tools/deployment/common/wait-for-pods.sh" >> "{{ home_dir }}/tempest/tempest-logs" 2>&1
      ignore_errors: false

    - name: Prepare tempest test
      sudo: yes
      sudo_user: ubuntu
      shell: |
        bash -x "{{ home_dir }}/tempest/prepare-tempest.sh" >> "{{ home_dir }}/tempest/tempest-logs" 2>&1
      register: tempest_output

    - name: Execute tempest test
      sudo: yes
      sudo_user: ubuntu
      shell: |
        bash -x "{{ home_dir }}/tempest/run-tempest.sh" >> "{{ home_dir }}/tempest/tempest-test-output" 2>&1
      register: tempest_output
      environment:
        WHITELIST_FILE: "{{ home_dir }}/tempest/whitelist.list"
        BLACKLIST_FILE: "{{ home_dir }}/tempest/blacklist.list"
        TEMPEST_PARAMS: "--concurrency 2"

    - when: Get tempest_output var
      debug:
        var: tempest_output
