---
- block:
  - when: vrack_net_name is defined
    name: Check if vrack net-name has been provided
    set_fact:
      nics:
        - net-name: "{{ contr_net_name }}"
        - net-name: "{{ vrack_net_name }}"

  - when: vrack_net_name is not defined
    name: vrack network is not defined
    set_fact:
      nics:
        - net-name: "{{ contr_net_name }}"

  - name: "Spawning k8s_contr node"
    os_server:
      state: present
      auth:
        auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
        username: "{{ lookup('env', 'OS_USERNAME') }}"
        password: "{{ lookup('env', 'OS_PASSWORD') }}"
        project_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
        user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
        project_domain_name: "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
      region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"
      image: "{{ contr_image }}"
      key_name: "{{ openstack_keypair_name }}"
      timeout: 200
      flavor: "{{ contr_flavor }}"
      nics: "{{ nics }}"
      name: "{{ server_name }}"
    with_items: "{{ k8s_hosts['k8s_contr'] }}"
    loop_control:
      loop_var: server_name
    register: new_k8s_contr_result

#  - os_server_facts:
#      auth:
#        auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
#        username: "{{ lookup('env', 'OS_USERNAME') }}"
#        password: "{{ lookup('env', 'OS_PASSWORD') }}"
#        project_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
#        user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
#        project_domain_name: "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
#      server: 'airskiff-contr-1'
#
#  - fail:
#      msg: "{{ openstack_servers[0] | json_query(vrack_addr) }}"
#    vars:
#      vrack_addr: 'addresses.vrack[0].addr'

  - os_server_facts:
      auth:
        auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
        username: "{{ lookup('env', 'OS_USERNAME') }}"
        password: "{{ lookup('env', 'OS_PASSWORD') }}"
        project_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
        user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
        project_domain_name: "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
      server: "{{ server_name }}"
    with_items: "{{ k8s_hosts['k8s_contr'] }}"
    loop_control:
      loop_var: server_name

  - set_fact:
      "{{ contr.name }}": "{{ contr | json_query(vrack_addr) }}"
      test: "{{ contr | json_query(vrack_addr) }}"
      test2: "{{ contr.name }}"
    vars:
      vrack_addr: 'addresses.vrack[0].addr'
      name: 'name'
    with_items: "{{ openstack_servers }}"
    loop_control:
      loop_var: contr

  - name: Get vars
    debug:
      var: vars

  - fail:
      msg: aa




  - name: Add contr into local inventory
    add_host:
      name: "{{ server_info.openstack.public_v4 }}"
      hostname: "{{ server_info.openstack.name }}"
      group: k8s_contr
    with_items: "{{ new_k8s_contr_result.results | flatten(1) }}"
    loop_control:
      loop_var: server_info


#  - when: vrack_net_name is defined
#    name: Add contr vrack network as fact
#    set_fact:
#      "{{ server_info.openstack.name }}": "{{ server_info.openstack.addresses[vrack_net_name] }}[0]['addr']"
#    with_items: "{{ new_k8s_contr_result.results | flatten(1) }}"
#    loop_control:
#      loop_var: server_info

  - name: "Spawning k8s_minion node"
    os_server:
      state: present
      auth:
        auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
        username: "{{ lookup('env', 'OS_USERNAME') }}"
        password: "{{ lookup('env', 'OS_PASSWORD') }}"
        project_name: "{{ lookup('env', 'OS_TENANT_NAME') }}"
        user_domain_name: "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
        project_domain_name: "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
      region_name: "{{ lookup('env', 'OS_REGION_NAME') }}"
      image: "{{ minion_image }}"
      key_name: "{{ openstack_keypair_name }}"
      timeout: 200
      flavor: "{{ minion_flavor }}"
      nics: "{{ nics }}"
      name: "{{ server_name }}"
    with_items: "{{ k8s_hosts['k8s_minion'] }}"
    loop_control:
      loop_var: server_name
    register: new_k8s_minion_result

  - name: Add minions into local inventory
    add_host:
      name: "{{ server_info.openstack.public_v4 }}"
      hostname: "{{ server_info.openstack.name }}"
      group: k8s_minion
    with_items: "{{ new_k8s_minion_result.results | flatten(1) }}"
    loop_control:
      loop_var: server_info

  - when: new_k8s_contr_result.changed
    name: wait for instances k8s_contr to be ready
    wait_for:
      port: 22
      delay: 5
      timeout: 150
      host: "{{ item }}"
    with_items: "{{ groups['k8s_contr'] }}"

  - when: new_k8s_minion_result.changed
    name: wait for instances k8s_minion to be ready
    wait_for:
      port: 22
      delay: 5
      timeout: 150
      host: "{{ item }}"
    with_items: "{{ groups['k8s_minion'] }}"
