---
- when: setup_airskiff
  block:
  - name: 000-clone-dependencies.sh
    sudo: yes
    sudo_user: ubuntu
    shell: |
      cd treasuremap && \
      ./tools/deployment/airskiff/developer/000-clone-dependencies.sh 2>&1 | tee -a "${HOME}/logs"
    ignore_errors: true
    run_once: True

  - name: 020-setup-client.sh
    sudo: yes
    sudo_user: ubuntu
    shell: |
      cd treasuremap && \
      sudo  ./tools/deployment/airskiff/developer/020-setup-client.sh 2>&1 | tee -a "${HOME}/logs"
    ignore_errors: yes
    run_once: true

  - name: change ownership of airskiff.yaml
    sudo: yes
    sudo_user: ubuntu
    shell: |
      if [ ! -f "$HOME/treasuremap/airskiff.yaml" ]; then
        touch "$HOME/treasuremap/airskiff.yaml"
      fi
      sudo chmod 0644 "$HOME/treasuremap/airskiff.yaml"
      sudo chown -R ubuntu:ubuntu "$HOME/"
    ignore_errors: true

  - name: Make sure that UCP label is set on all nodes
    sudo: yes
    sudo_user: ubuntu
    shell: |
      kubectl label nodes --all --overwrite ucp-control-plane=enabled
    ignore_errors: true

  - name: Check if UCP namespace is deployed
    shell: |
      kubectl get namespaces --no-headers | grep -q ucp
    register: ucp_namespace
    ignore_errors: false
    run_once: true

  - when: ucp_namespace.rc == 1
    block:
    - name: 030-armada-bootstrap.sh
      sudo: yes
      sudo_user: ubuntu
      shell: |
        cd treasuremap && \
        sudo ./tools/deployment/airskiff/developer/030-armada-bootstrap.sh 2>&1 | tee -a "${HOME}/logs"
      ignore_errors: false
      run_once: true

    - name: Increase postgresql statefulset app
      sudo: yes
      sudo_user: ubuntu
      shell: |
        kubectl -n ucp scale statefulsets postgresql --replicas=3
      ignore_errors: true
      run_once: true

    - name: Setup openrc
      sudo: yes
      sudo_user: ubuntu
      shell: |
        export OS_PASSWORD=$(grep 'password' "$HOME/treasuremap/type/skiff/secrets/passphrases/osh_keystone_admin_password.yaml" | grep data | awk '{print $2}')
        bash "$HOME/scripts/set-openrc.sh"
      ignore_errors: yes
      run_once: true
