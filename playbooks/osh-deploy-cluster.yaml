---
- name:
  hosts: localhost
  tasks:
    - name: Set k8s_hosts as fact
      set_fact:
        k8s_hosts:
          k8s_contr:
            - "{{ lookup('env', 'CONTR_NAME') if lookup('env', 'CONTR_NAME') != '' else 'osh_bob_contr' }}"
          k8s_minion:
            # If you need more minion nodes, just add same entry
            - "{{ lookup('env', 'MINION_1_NAME') if lookup('env', 'MINION_1_NAME') != '' else 'osh_stevard_minion'  }}"
            - "{{ lookup('env', 'MINION_2_NAME') if lookup('env', 'MINION_2_NAME') != '' else 'osh_kevin_minion'  }}"
        contr_flavor: b2-60
        contr_image: "Ubuntu 18.04"
        contr_key_name: ansible_key
        contr_net_name: Ext-Net
        minion_flavor: b2-30
        minion_image: "Ubuntu 18.04"
        minion_net_name: Ext-Net
        vrack_net_name: "{{ lookup('env', 'VRACK_NET_NAME') if lookup('env', 'VRACK_NET_NAME') != '' else '' }}"
        openstack_keypair_name: "{{ lookup('env', 'OPENSTACK_KEYPAIR_NAME') if lookup('env', 'OPENSTACK_KEYPAIR_NAME') != '' else 'ansible_key' }}"
  tags:
    - local_inventory

- name: Add ssh key if not present
  hosts: localhost
  remote_user: ubuntu
  gather_facts: False
  roles:
    - ssh_keys

- name: Create servers
  hosts: localhost
  gather_facts: False
  roles:
    - create_servers

- name:
  hosts:
    - localhost
    - k8s_contr
    - k8s_minion
  tasks:
    - name: Set k8s_hosts as fact
      set_fact:
        openstack_keypair_name: "{{ lookup('env', 'OPENSTACK_KEYPAIR_NAME') if lookup('env', 'OPENSTACK_KEYPAIR_NAME') != '' else 'ansible_key' }}"
        install_docker_ce: "{{ true if lookup('env', 'INSTALL_DOCKER_CE') == 'true' else false }}"
        repo_name: "{{ lookup('env', 'DOCKER_REPO_NAME') }}"
        repo_login: "{{ lookup('env', 'DOCKER_REPO_LOGIN') }}"
        repo_password: "{{ lookup('env', 'DOCKER_REPO_PASSWORD') }}"
        etcd_on_ramdisk: "{{ true if lookup('env', 'ETC_ON_RAMDISK') == 'true' else false }}"
        setup_minikube: "{{ true if lookup('env', 'SETUP_MINIKUBE') == 'true' else false }}"
        treasuremap_overwrite: "{{ true if lookup('env', 'TREASUREMAP_OVERWRITE') == '' else false }}"
        treasuremap_params: "{{ lookup('env', 'TREASUREMAP_PARAMS') if lookup('env', 'TREASUREMAP_PARAMS') != '' else '' }}"
        namespace: "{{ lookup('env', 'NAMESPACE') if lookup('env', 'NAMESPACE') != '' else 'testnamespace' }}"
        use_shipyard_action: "{{ true if lookup('env', 'USE_SHIPYARD_ACTION') == 'true' else false }}"
        setup_airskiff: "{{ true if lookup('env', 'SETUP_AIRSKIFF') == 'true' else false }}"
        setup_osh: "{{ true if lookup('env', 'SETUP_OSH') == 'true' else false }}"


- name: Add VMs to known hosts and install keys on the hosts
  hosts: localhost
  remote_user: ubuntu
  gather_facts: False
  tags:
    - copy_ssh_keys
  roles:
    - ssh_known_hosts

- name: Configure known_hosts on contr
  hosts:
    - k8s_contr
  remote_user: ubuntu
  gather_facts: False
  roles:
    - ssh_common_contr
  tags:
    - contr_known_hosts
    - minion_known_hosts

- name: Generate ansible ssh key and add known_hosts
  hosts:
    - k8s_contr
    - k8s_minion
  remote_user: ubuntu
  gather_facts: False
  tags:
    - ssh_known_hosts
  roles:
    - ssh_common

# Copy
- name: Copy required scripts
  hosts:
    - k8s_contr
    - k8s_minion
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - copy_scripts

# firewall, upgrade packages
- name: Remove, upgrade packages and set iptables
  hosts:
    - k8s_contr
    - k8s_minion
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - common

- name: Mount etcd dir as RAMDISK
  hosts:
    - k8s_contr
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - ramdisk_etcd

- name: Install Docker-CE
  hosts:
    - k8s_contr
    - k8s_minion
  strategy: free
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - docker_ce_install


- name: Install required packages for k8s node
  hosts:
    - k8s_minion
  strategy: free
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - deploy_minions

- name: Treasuremap preparation
  hosts:
    - k8s_contr
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - treasuremap_preparations

- name: Clone OSH repo and setup k8s controller using OSH script
  hosts:
    - k8s_contr
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - deploy_osh_controller

- name: Signin to docker repo using file
  hosts:
    - k8s_contr
    - k8s_minion
  strategy: free
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - docker_login

- name: Add private docker registry for k8s
  hosts:
    - k8s_contr
    - k8s_minion
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - k8s_docker_repo

- name: Install required services if OSH
  hosts:
    - k8s_contr
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - deploy_osh_basic_services

# For airskiff
- name: Do post treasuremap things if Airskiff
  hosts:
    - k8s_contr
  gather_facts: False
  remote_user: ubuntu
  become: True
  roles:
    - treasuremap_prepare_ucp
